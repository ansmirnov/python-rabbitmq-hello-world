#+TITLE: RabbitMQ basic usage

** Contents                                                           :TOC_3:
  - [[#environment-description][Environment description]]
    - [[#python-requirements][Python requirements]]
  - [[#producer][Producer]]
    - [[#imports][Imports]]
    - [[#parameters][Parameters]]
    - [[#creds][Creds]]
    - [[#connection][Connection]]
    - [[#channel][Channel]]
    - [[#declare-queue][Declare queue]]
    - [[#publish-message][Publish message]]
    - [[#close-connection][Close connection]]
  - [[#consumer][Consumer]]

** Environment description

- Deployed RabbitMQ 3.8.11

- Python 3.9.1

*** Python requirements

#+BEGIN_SRC conf :tangle requirements.txt
pika==1.1.0
#+END_SRC

** Producer
   :PROPERTIES:
   :header-args: :session *shell rabbitmq producer* :results silent raw
   :END:

*** Imports

#+BEGIN_SRC python
import os
#+END_SRC

#+BEGIN_SRC python
import pika
#+END_SRC

*** Parameters

#+BEGIN_SRC python
RABBITMQ_HOST = os.environ.get("RABBITMQ_HOST")
RABBITMQ_USER = os.environ.get("RABBITMQ_USER")
RABBITMQ_PASSWORD = os.environ.get("RABBITMQ_PASSWORD")
#+END_SRC

*** Creds

#+BEGIN_SRC python
credentials = pika.PlainCredentials(RABBITMQ_USER, RABBITMQ_PASSWORD)
#+END_SRC

*** Connection

#+BEGIN_SRC python
connection = pika.BlockingConnection(
    pika.ConnectionParameters(host=RABBITMQ_HOST, credentials=credentials)
)
#+END_SRC

*** Channel

#+BEGIN_SRC python
channel = connection.channel()
#+END_SRC

*** Declare queue

#+BEGIN_SRC python
channel.queue_declare(queue='hello')
#+END_SRC

*** Publish message

#+BEGIN_SRC python
channel.basic_publish(exchange='',
                      routing_key='hello',
                      body='Hello World!')
#+END_SRC

*** Close connection

#+BEGIN_SRC python
connection.close()
#+END_SRC

** Consumer
   :PROPERTIES:
   :header-args: :session *shell rabbitmq consumer* :results silent raw
   :END:
